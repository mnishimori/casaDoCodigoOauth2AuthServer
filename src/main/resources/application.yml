server.port: 8080

## define se vai utilizar a solução onde authorization server e resource server estão juntos ou separados
## definir como true, significa que o oauth provider está todo configurado aqui na aplicação bookserver
## definir como false, significa que essa aplicação só possui configuração para o resource server
## -> quando está como false, para validar o token é preciso que o authorization server esteja salvando os dados do
## -> client details em um banco de dados (ao invés de em memória).
oauth:
  enabled: true
  all-in-one: true

## configurações do datasource do spring
spring:
  datasource:
    bookserver:
      url: jdbc:mysql://localhost:3306/bookserver?createDatabaseIfNotExist=true&serverTimezone=UTC
      username: root
      password:
      driverClassName: com.mysql.cj.jdbc.Driver
    bookserver-oauth:
      url: jdbc:mysql://localhost:3306/bookserver_oauth?createDatabaseIfNotExist=true&serverTimezone=UTC
      username: root
      password:
      driverClassName: com.mysql.cj.jdbc.Driver
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        show_sql: true
        hibernate.format_sql: true
        hbm2ddl:
          auto: validate
flyway:
  bookserver:
    enabled: true
    url: jdbc:mysql://localhost:3306/bookserver
    user: root
    password:
    locations: classpath:db/migration/bookserver  # Caminho dos scripts de migração para datasource1

  bookserver-oauth:
    enabled: true
    url: jdbc:mysql://localhost:3306/bookserver_oauth
    user: root
    password:
    locations: classpath:db/migration/bookserver_oauth  # Caminho dos scripts de migração para datasource2
